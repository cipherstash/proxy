[settings]

trusted_config_paths = ["./env/mise.passthrough.toml"]

[task_config]
includes = ["./tasks"]


[env]
CS_DATABASE__HOST = "host.docker.internal"
POSTGRES_DB = "{{env.CS_DATABASE__NAME}}"
PGUSER = "{{env.CS_DATABASE__USERNAME}}"
PGPASSWORD = "{{env.CS_DATABASE__PASSWORD}}"
PGHOST = "{{env.CS_DATABASE__HOST}}"
PGPORT = "{{env.CS_DATABASE__PORT}}"

# ====================================================================================================

[tasks."benchmark"]
alias = 'b'
description = "Run benchmarks"
run = """
set -e

mise run benchmark:clean

mise run benchmark:setup

# # Extended protocol with default script
# mise run benchmark_service --target=postgres --protocol=extended --port=5532 --time=5
# mise run benchmark_service --target=pgbouncer --protocol=extended --port=6433 --time=5
# mise run benchmark_service --target=proxy --protocol=extended --port=6432 --time=5

# Extended protocol with plaintext script
mise run benchmark_service --target=postgres --transaction=plaintext --protocol=extended --port=5532 --time=5
mise run benchmark_service --target=pgbouncer --transaction=plaintext --protocol=extended --port=6433 --time=5
mise run benchmark_service --target=proxy --transaction=plaintext --protocol=extended --port=6432 --time=5

# Extended protocol with encrypted script
mise run benchmark_service --target=proxy --transaction=encrypted --protocol=extended --port=6432 --time=5

mise run benchmark:plot
"""

[tasks."benchmark:setup"]
run = """
cat sql/benchmark-schema.sql | docker exec -i postgres${CONTAINER_SUFFIX} psql postgresql://${CS_DATABASE__USERNAME}:${CS_DATABASE__PASSWORD}@${CS_DATABASE__HOST}:${CS_DATABASE__PORT}/${CS_DATABASE__NAME} -f-

# Initialize pgbench
docker compose run --rm postgres${CONTAINER_SUFFIX:-} pgbench --host=${CS_DATABASE__HOST} --port=${CS_DATABASE__PORT} --scale=1 -i --no-vacuum
"""

[tasks."benchmark:plot"]
alias = 'b'
description = "Plot graphs from benchmark results"
run = """
python plot.py
"""

[tasks."benchmark:up"]
alias = 'u'
description = "Run PostgreSQL with docker compose"
run = """
set -e

mise run postgres:up
mise run pgbouncer:up
mise run proxy:up

"""

[tasks."benchmark:clean"]
description = "Clean old benchmark results"
run = """
rm -rf {{config_root}}/results/*.csv
"""

[tasks."pgbouncer:up"]
alias = 'u'
description = "Run pgbouncer"
run = """
set -e
docker compose up --build pgbouncer --detach
"""


# [tasks."down"]
# alias = 'u'
# description = "Tear down PostgreSQL and Proxy containers"
# run = """
# set -e
# if [[ -z "${CS_BENCHMARK_BUILD}" ]]; then
#     mise run proxy:down
#     mise run postgres:down
# fi
# """

# [tasks."proxy:up"]
# alias = 'u'
# description = "Run CipherStash Proxy with docker compose"
# run = """
# set -e

# docker compose up --build proxy --detach
# """

# [tasks."proxy:down"]
# alias = 'pd'
# description = "Tear down Proxy container"
# run = """
# set -e
# docker compose down proxy
# """

# [tasks."postgres:up"]
# alias = 'pgu'
# description = "Run PostgreSQL with docker compose"
# run = """
# set -e
# docker compose up postgres --detach
# """

# [tasks."postgres:down"]
# alias = 'pgd'
# description = "Tear down PostgreSQL container"
# run = """
# set -e
# docker compose down postgres
# """
